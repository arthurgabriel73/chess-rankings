# pyproject.toml: is a configuration file used by packaging tools, as well as other tools such as linters, type checkers, etc.
# There are three possible TOML tables in this file: [build-system], [project] and [tool]


# [build-system]: table is strongly recommended. It allows you to declare which build backend you use and which other dependencies are needed to build your project.
[build-system]
# requires: is a list of dependencies needed to build the project â€“ this is typically just the build backend package, but it may also contain additional dependencies.
# You can also constrain the versions, e.g., requires = ["setuptools >= 61.0"].
requires = ["poetry-core>=2.0.0,<3.0.0"]

# build-backend: the build backend to be used.
build-backend = "poetry.core.masonry.api"


[project]
name = "chess-rankings"
version = "0.1.0"
description = ""
authors = [
    { name = "arthurgabriel73", email = "arthurgabriel73@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.13"


[tool.poetry]
# package-mode: If you want to use Poetry only for dependency management but not for packaging, you can use the non-package mode
# In this mode, metadata such as name and version are optional. Therefore, it is not possible to build a distribution or publish the project to a package index.
# Further, when running poetry install, Poetry does not try to install the project itself, but only its dependencies
package-mode = false


[tool.poetry.dependencies]
requests = "^2.32.4"
uvicorn = "^0.35.0"
fastapi = "^0.116.1"
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
boto3 = "^1.39.15"
redis = "^6.2.0"
uvicorn-worker = "^0.3.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-env = "^1.1.5"
coverage = "^7.9.1"
ruff = "^0.12.5"
behave = "^1.2.6"
httpx = "^0.28.1" # only used for e2e testing
pandas = "^2.3.1" # only used for e2e testing
